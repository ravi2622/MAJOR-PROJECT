1. Getting Started :=
------------------

=> Database Set Up

=> REST Apis for CRUD

--> MODEL : Listing --> place

    1. title
    2. description
    3. image
    4. price
    5. location
    6. country

2. ROUTES :=
--------- 

-> index Route

    GET     /Listings -> all Listings

-> new Route

    GET     /Listings/new -> form

    POST    /Listings -> add new List

-> Update Route: Edit & Update Route

    GET     /Listings/:id/edit  ->  edit form
                                        |-> submit

    put     /Listings/:id

3. what is the EJS mate :=
-----------------------

Run node app.js from examples and open localhost:3000 to see a working example.

Given a template, index.ejs:

<% layout('boilerplate') -%>
<h1>I am the <%= what %> template</h1>
And a layout, boilerplate.ejs:

<!DOCTYPE html>
<html>
  <head>
    <title>It's <%= who %></title>
  </head>
  <body>    
    <section>
      <%- body -%>
    </section>
  </body>
</html>

Note:-
----
==> static files for the css

4. creating nav bar :=
-------------------

5. Form Validations := 
-------------------

=> When we enter data in the form, the browser and/or the web server will check to see that the data is in the correct formate and within the constrainsts set by the applicastion.

6. Custom Error Handler :=
-----------------------

7. Error.ejs :=
------------

8. Validations for Schema :=
-------------------------

-> this method is to long and to lendhi when we enter any new data for the our web app this is not use full.

        -----------------------------------------------------------------------
        | app.post("/listings", wrapAsync(async (req, res, next) => {         |                                                              
        |     if (!req.body.listing) {                                        |                                
        |         throw new ExpressError(400, "Send valid data for listing"); |                                                                      
        |     }                                                               |        
        |                                                                     |    
        |     let newListing = new Listing(req.body.listing);                 |                                                      
        |                                                                     |    
        |     if (!newListing.title) {                                        |                                
        |         throw new ExpressError(400, "Title is missing!");           |                                                            
        |     }                                                               |        
        |     if (!newListing.description) {                                  |                                      
        |         throw new ExpressError(400, "description is missing!");     |                                                                  
        |     }                                                               |        
        |     if (!newListing.price) {                                        |                                
        |         throw new ExpressError(400, "price is missing!");           |                                                            
        |     }                                                               |        
        |     if (!newListing.location) {                                     |                                  
        |         throw new ExpressError(400, "location is missing!");        |                                                                
        |     }                                                               |        
        |     if (!newListing.country) {                                      |                                  
        |         throw new ExpressError(400, "country is missing!");         |                                                              
        |     }                                                               |        
        |                                                                     |    
        |     newListing.save().then(res => {                                 |                                      
        |         console.log(res);                                           |                            
        |     }).catch(err => {                                               |                        
        |         console.log(err);                                           |                            
        |     });                                                             |          
        |                                                                     |    
        |     res.redirect("listings");                                       |                                
        | }));                                                                |
        -----------------------------------------------------------------------

=> so now we can use a Joi.dev api refrence for the Validations

--------------------------------------------------
| const Joi = require('joi');                    |                           
|                                                | 
| module.exports.listSchema = Joi.object({       |                                         
|     listing: Joi.object({                      |                         
|         title: Joi.string().required(),        |                                       
|         description: Joi.string().required(),  |                                             
|         image: Joi.string().allow("", null),   |                                             
|         price: Joi.number().required().min(0), |                                               
|         location: Joi.string().required(),     |                                           
|         country: Joi.string().required(),      |                                         
|     }).required()                              |                 
| });                                            |   
--------------------------------------------------

-> and post request is :-

---------------------------------------------------------------
| app.post("/listings", wrapAsync(async (req, res, next) => { |                                                                          
|                                                             |                
|     let result = listSchema.validate(req.body);             |                                                              
|     console.log(result);                                    |                                        
|                                                             |                
|     if(result.error) {                                      |                                      
|         throw new ExpressError(400, result.error);          |                                                                  
|     }                                                       |                    
|                                                             |                
|     let newListing = new Listing(req.body.listing);         |                                                                  
|                                                             |                
|     newListing.save().then(res => {                         |                                                  
|         console.log(res);                                   |                                        
|     }).catch(err => {                                       |                                    
|         console.log(err);                                   |                                        
|     });                                                     |                      
|                                                             |                
|     res.redirect("listings");                               |                                            
| }));                                                        |                    
---------------------------------------------------------------


9. Validations for Schema (By using middielware) :=
------------------------------------------------

------------------------------------------------------------------------------
| const Joi = require('joi');                                                |                               
|                                                                            |     
| module.exports.listSchema = Joi.object({                                   |                                             
|     listing: Joi.object({                                                  |                             
|         title: Joi.string().required(),                                    |                                           
|         description: Joi.string().required(),                              |                                                 
|         image: Joi.string().allow("", null),                               |                                                 
|         price: Joi.number().required().min(0),                             |                                                   
|         location: Joi.string().required(),                                 |                                               
|         country: Joi.string().required(),                                  |                                             
|     }).required()                                                          |                     
| });                                                                        |       
|                                                                            |     
| const validatelisting = (req, res, next) => {                              |                                                 
|     let { error } = listSchema.validate(req.body);                         |                                                       
|     console.log(error);                                                    |                           
|     if (error) {                                                           |                     
|         let errMsg = error.details.map((el) => el.message).join(",");      |                                                                         
|         throw new ExpressError(400, errMsg);                               |                                                 
|     }                                                                      |         
|     else {                                                                 |               
|         next();                                                            |                   
|     }                                                                      |         
| };                                                                         |       
------------------------------------------------------------------------------

10. New Model := Reviews
-------------

-> comment 
-> rating(1 to 5)
-> createdAt

11. Create Reviews :=
------------------

1. Setting up the Reviews Form

12. Create Reviews :=

2. submitting the Form

-> POST      /listings/:id/reviews

12. Delete Reviews :=
------------------

-> Mongo $pull operator

-----------------------------------------------------------------------------------------------------------------------------
| $pull                                                                                                                     |
|     The $pull operator remove from an existing array all instances of a value or values that match a specified condition. |
-----------------------------------------------------------------------------------------------------------------------------

13. express.Route() :=
-------------------

//user.js

--------------------------------------------                                                    
| const express = require("express");      |                                            
| const router = express.Router();         |                                          
|                                          |          
| //index - users                          |                        
| router.get("/", (req, res) => {          |                                        
|     res.send("GET for users");           |                                        
| });                                      |            
|                                          |          
| //show - users                           |                        
| router.get("/:id", (req, res) => {       |                                            
|     res.send("GET for user id");         |                                          
| });                                      |            
|                                          |          
| //POST - users                           |                        
| router.post("/", (req, res) => {         |                                          
|     res.send("POST for users");          |                                        
| });                                      |            
|                                          |          
| //DELETE - users                         |                          
| router.delete("/:id", (req, res) => {    |                                              
|     res.send("DELETE for user id");      |                                            
| });                                      |            
|                                          |          
| module.exports = router;                 |                                  
--------------------------------------------

//server.js

--------------------------------------------------
| const express = require("express");            |                                           
| const app = express();                         |                               
| const users = require("./routes/user.js");     |                                                   
| const posts = require("./routes/post.js");     |                                                   
|                                                |         
| app.get("/", (req, res) => {                   |                                     
|     res.send("Hi, I am root!");                |                                       
| });                                            |           
|                                                |         
| app.use("/users", users);                      |                                 
| // app.use("/posts", posts);                   |                                     
|                                                |         
| app.listen(3000, () => {                       |                                 
|     console.log("Server is listening to 3000");|                                                       
| });                                            |           
--------------------------------------------------

14. Miscellaneous :=
-----------------

-> Express router
-> cookies

--> Express Router :=
------------------

-> Express Routers are a way to organize your Express application such that our primary app.js file does not become bloated.

----------------------------------------------------------------
| const router = express.Router() // creates new router object |
----------------------------------------------------------------

15. Restructuring Listings & reviews :=
------------------------------------

---------------------------------
|app.use("/listings", listings);|
---------------------------------

------------------------------------------------
| router = express.Router({mergParams: true}); |
------------------------------------------------

16. Cookies := Web Cookies
-----------

-> HTTP cookies are small blocks of data created by a web server while a user is browsing a website and placed on the user's computer or other device by the user's computer or other device by the user's web broweser

17. How to send Cookies :=
-----------------------

-> in Express

------------------------------------------
| app.get("/setcookies", (req, res) => { |                                        
|   res.cookie("greet", "namaste");      |                                    
|   res.cookie("origin", "India");       |                                  
|   res.send("we send you a cookies!");  |                                      
| });                                    |    
------------------------------------------

-> res.cookie(name, value [, options])

-> Sets cookie name to value. The value parameter may be a string or object converted to JSON.

-> The options parameter is an object that can have the following properties.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
| Property	  | Type	    | Description                                                                                                                                                   |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
| domain	    | String	  | Domain name for the cookie. Defaults to the domain name of the app.                                                                                           |                                             
| encode	    | Function	| A synchronous function used for cookie value encoding. Defaults to encodeURIComponent.                                                                        |                                                                 
| expires	    | Date	    | Expiry date of the cookie in GMT. If not specified or set to 0, creates a session cookie.                                                                     |                                                                   
| httpOnly	  | Boolean	  | Flags the cookie to be accessible only by the web server.                                                                                                     |                                   
| maxAge	    | Number	  | Convenient option for setting the expiry time relative to the current time in milliseconds.                                                                   |                                                                     
| path	      | String	  | Path for the cookie. Defaults to “/”.                                                                                                                         |               
| partitioned	| Boolean	  | Indicates that the cookie should be stored using partitioned storage. See Cookies Having Independent Partitioned State (CHIPS) for more details.              |                                                                                                                           
| priority	  | String	  | Value of the “Priority” Set-Cookie attribute.                                                                                                                 |                       
| secure	    | Boolean	  | Marks the cookie to be used with HTTPS only.                                                                                                                  |                       
| signed	    | Boolean	  | Indicates if the cookie should be signed.                                                                                                                     |                   
| sameSite	  | Boolean   | or String	Value of the “SameSite” Set-Cookie attribute. More information at https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site-00#section-4.1.1. |                                                                                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

18. Cookie-Parser :=
-----------------

-> Parse Cookie header and populate req.cookies with an object keyed by the cookie names. Optionally you may enable signed cookie support by passing a secret string, which assigns req.secret so it may be used by other middleware.

-> cookie-parser package

--------------------------------------------------
| const cookieParser = require("cookie-parser"); |
| app.use(cookieParser());                       |
|                                                |
| app.get("/getcookies", (req, res) => {         |
|   console.dir(req.cookies);                    |
|   res.send("got the cookies");                 |
| });                                            |
--------------------------------------------------

-----------------------------------------------
| app.get("/getcookies", (req, res) => {      |                                                 
|   let { name = "anonymous" } = req.cookies; |                                                 
|   res.send(`Hi, ${name}`);                  |                                 
| });                                         |            
-----------------------------------------------

19. Signed Cookies :=
------------------

-> Send Signed Cookies

app.use(cookieParser("secretcode"));

---------------------------------------------------
| app.get("/getsignedcookies", (req, res) => {    |
|   res.cookie("color", "red", { signed: true }); |
|   res.send("done!");                            |
| });                                             |
---------------------------------------------------

-> Verify Signed Cookie

--------------------------------------
| app.get("/verify", (req, res) => { |                                 
|   res.send(req.signedCookies);     |                             
| })                                 | 
--------------------------------------

20. What is State :=
-----------------

-> stateful protocol - Staterotocol require server to save the status and session information.

ex - ftp (file transfer protocol)
--

-> stateless protocol - stateless protocol does not require the server to retain the server information or session.

ex - http (hiper text transfer protocol)
--

21. Express Session (npm package) := An attempt to make our session stateful
---------------------------------

-> Express Session when any user are come to the our website and start any sesstion so express sesstion is make individiual session id for the perticular user and save the information mastion of the sesstion.

        ex :- aapda ecomerse website pr koi user maniloke login kariya vagar aave ane cart ma items ne add karvanu sharu kari dey to te vastu badhi cart ma add thay jay che pan pay meant pela login mange che etle express na use thi koi sesstion statrt thay hase jeni koi id hase unqui and items save thati hase aavu badha user mate thay che.

                                     (server)                                           (clients) -> from client side save the session id in the form of cookies
            ---------------------------------------------------                       -------------
            | user1 : sesstionId - 101                        |                       | --------- |
                      information - {                 -|                                |       |
                                      item: laptop,    |------------------------------> |  101  |      
                                      item: charger   -|                                |       |
                                    }                                                   ---------

              -> same vastu mate pan temj koi bija user mate

              user2 : sesstionId - 102                                                 ---------
                      information - {                 -|                               |       |
                                      item: laptop,    |------------------------------>|  102  |
                                      item: charger   -|                               |       |
                                    }                                                  ---------


-> Session = one intercation between clint------
                                       ^       |
                                       |   &   |
                                       |       v
                                       -----server
-> npm package :-

------------------------------------
| app.use(session({                |              
|   secret: 'mysupersecretstring', |                      
|   resave: false,                 |              
|   saveUninitialized: true,       |                        
|   // cookie: { secure: true }    |                          
| }));                             |
------------------------------------

-> storing and using info :-

--------------------------------------------------------------------------------------------------------------------------------------------------------------------
| const sesstionOpstion = { //-> aa veriybal no use jo aapde futerma koi extra session ne add karva hoy to banaviu che jene aapde app.use() middelvar ma mokalsu. |                                                                                                                                                                              
|     secret: 'mysupersecretstring',                                                                                                                              |                                                  
|     resave: false,                                                                                                                                              |                                  
|     saveUninitialized: true,                                                                                                                                    |                                            
|     // cookie: { secure: true }                                                                                                                                 |                                              
| }                                                                                                                                                               |                
|                                                                                                                                                                 |                
| app.use(session(sesstionOpstion));                                                                                                                              |                                                  
|                                                                                                                                                                 |                
| app.get("/register", (req, res) => {                                                                                                                            |                                                    
|     let {name = "anonymous"} = req.query;                                                                                                                       |                                                        
|     console.log(req.session);                                                                                                                                   |                                            
|     req.session.name = name;                                                                                                                                    |                                            
|     console.log(req.session.name);                                                                                                                              |                                                  
|     // res.send(name);                                                                                                                                          |                                      
|     res.redirect("/hello");                                                                                                                                     |                                          
| });                                                                                                                                                             |                  
|                                                                                                                                                                 |                
| app.get("/hello", (req, res) => {                                                                                                                               |                                                
|     res.send(`Hello ${req.session.name}`);                                                                                                                      |                                                          
| });                                                                                                                                                             |                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------

22. connect-flash := (npm package - using for the flash the messages)
-----------------

--> The flash is a special area of the session used for storing message. Message are writtnen to the flash and cleared after being displayed to the user.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------
| const sesstionOpstion = { //-> aa veriybal no use jo aapde futerma koi extra session ne add karva hoy to banaviu che jene aapde app.use() middelvar ma mokalsu. |                                                                                                                                                                              
|     secret: 'mysupersecretstring',                                                                                                                              |                                                  
|     resave: false,                                                                                                                                              |                                  
|     saveUninitialized: true,                                                                                                                                    |                                            
|     // cookie: { secure: true }                                                                                                                                 |                                              
| }                                                                                                                                                               |                
|                                                                                                                                                                 |                
| app.use(session(sesstionOpstion));                                                                                                                              |                                                  
| app.use(flash());                                                                                                                                               |                                
|                                                                                                                                                                 |                
| app.get("/register", (req, res) => {                                                                                                                            |                                                    
|     let { name = "anonymous" } = req.query;                                                                                                                     |                                                          
|     console.log(req.session);                                                                                                                                   |                                            
|     req.session.name = name;                                                                                                                                    |                                            
|     console.log(req.session.name);                                                                                                                              |                                                  
|     req.flash("success", "user registered succesfully");                                                                                                        |                                                                        
|     // res.send(name);                                                                                                                                          |                                      
|     res.redirect("/hello");                                                                                                                                     |                                          
| });                                                                                                                                                             |                  
|                                                                                                                                                                 |                
| app.get("/hello", (req, res) => {                                                                                                                               |                                                
|     res.render("page.ejs", { name: req.session.name, msg: req.flash("success") });                                                                              |                                                                                                  
| });                                                                                                                                                             |                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------

-> Better way to flash the message is res.local :-

-------------------------------------------------------------------------------------------------------------------------------------------------------------------
| const sesstionOpstion = { //-> aa veriybal no use jo aapde futerma koi extra session ne add karva hoy to banaviu che jene aapde app.use() middelvar ma mokalsu. |                                                                                                                                                                            
|     secret: 'mysupersecretstring',                                                                                                                              |                                                
|     resave: false,                                                                                                                                              |                                
|     saveUninitialized: true,                                                                                                                                    |                                          
|     // cookie: { secure: true }                                                                                                                                 |                                            
| }                                                                                                                                                               |              
|                                                                                                                                                                 |              
| app.use(session(sesstionOpstion));                                                                                                                              |                                                
| app.use(flash());                                                                                                                                               |                              
|                                                                                                                                                                 |              
| app.get("/register", (req, res) => {                                                                                                                            |                                                  
|     let { name = "anonymous" } = req.query;                                                                                                                     |                                                        
|     console.log(req.session);                                                                                                                                   |                                          
|     req.session.name = name;                                                                                                                                    |                                          
|     console.log(req.session.name);                                                                                                                              |                                                
|                                                                                                                                                                 |              
|     // req.flash("success", "user registered succesfully");                                                                                                     |                                                                        
|                                                                                                                                                                 |              
|     if (name === "anonymous") {                                                                                                                                 |                                            
|         req.flash("error", "user not registered!");                                                                                                             |                                                                
|     } else {                                                                                                                                                    |                          
|         req.flash("success", "user registered succesfully");                                                                                                    |                                                                          
|     }                                                                                                                                                           |                  
|                                                                                                                                                                 |              
|     // res.send(name);                                                                                                                                          |                                    
|     res.redirect("/hello");                                                                                                                                     |                                        
| });                                                                                                                                                             |                
|                                                                                                                                                                 |              
| app.get("/hello", (req, res) => {                                                                                                                               |                                              
|     // res.render("page.ejs", { name: req.session.name, msg: req.flash("success") });                                                                           |                                                                                                  
|                                                                                                                                                                 |              
|     res.locals.sucessMsg = req.flash("success"); //-> dayerect pass karvani have jaroor nathi auto metic page.ejs ma save thay jay che.                         |                                                                                                                                                    
|     res.locals.errorMsg = req.flash("error");                                                                                                                   |                                                          
|     res.render("page.ejs", { name: req.session.name });                                                                                                         |                                                                    
| });                                                                                                                                                             |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------

--> for the flash message viya res.local using middelvar :-

----------------------------------------------------
| app.use((req, res, next) => {                    |                                    
|     res.locals.sucessMsg = req.flash("success"); |                                                       
|     res.locals.errorMsg = req.flash("error");    |                                                   
|                                                  |
|     next();                                      |                 
| })                                               |        
----------------------------------------------------

-------------------------------------------------------------------------------------------------------------------------------------------------------------------
| const sesstionOpstion = { //-> aa veriybal no use jo aapde futerma koi extra session ne add karva hoy to banaviu che jene aapde app.use() middelvar ma mokalsu. |                                                                                                                                                                        
|     secret: 'mysupersecretstring',                                                                                                                              |                                          
|     resave: false,                                                                                                                                              |                          
|     saveUninitialized: true,                                                                                                                                    |                                    
|     // cookie: { secure: true }                                                                                                                                 |                                        
| }                                                                                                                                                               |          
|                                                                                                                                                                 |        
| app.use(session(sesstionOpstion));                                                                                                                              |                                          
| app.use(flash());                                                                                                                                               |                          
|                                                                                                                                                                 |        
| app.use((req, res, next) => {                                                                                                                                   |                                      
|     res.locals.sucessMsg = req.flash("success");                                                                                                                |                                                        
|     res.locals.errorMsg = req.flash("error");                                                                                                                   |                                                      
|                                                                                                                                                                 |        
|     next();                                                                                                                                                     |                    
| });                                                                                                                                                             |            
|                                                                                                                                                                 |        
| app.get("/register", (req, res) => {                                                                                                                            |                                            
|     let { name = "anonymous" } = req.query;                                                                                                                     |                                                    
|     console.log(req.session);                                                                                                                                   |                                      
|     req.session.name = name;                                                                                                                                    |                                    
|     console.log(req.session.name);                                                                                                                              |                                          
|                                                                                                                                                                 |        
|     // req.flash("success", "user registered succesfully");                                                                                                     |                                                                    
|                                                                                                                                                                 |        
|     if (name === "anonymous") {                                                                                                                                 |                                        
|         req.flash("error", "user not registered!");                                                                                                             |                                                            
|     } else {                                                                                                                                                    |                    
|         req.flash("success", "user registered succesfully");                                                                                                    |                                                                    
|     }                                                                                                                                                           |              
|                                                                                                                                                                 |        
|     // res.send(name);                                                                                                                                          |                              
|     res.redirect("/hello");                                                                                                                                     |                                    
| });                                                                                                                                                             |            
|                                                                                                                                                                 |        
| app.get("/hello", (req, res) => {                                                                                                                               |                                          
|     // res.render("page.ejs", { name: req.session.name, msg: req.flash("success") });                                                                           |                                                                                              
|                                                                                                                                                                 |        
|     // res.locals.sucessMsg = req.flash("success"); //-> dayerect pass karvani have jaroor nathi auto metic page.ejs ma save thay jay che.                      |                                                                                                                                                  
|     // res.locals.errorMsg = req.flash("error");                                                                                                                |                                                        
|                                                                                                                                                                 |        
|     res.render("page.ejs", { name: req.session.name });                                                                                                         |                                                                
| });                                                                                                                                                             |            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------

23. Using Sessions := Adding Cookie Opstions
------------------

-------------------------------------------------------------------------------------------------------------------------------------------------------------------
| const sesstionOpstion = { //-> aa veriybal no use jo aapde futerma koi extra session ne add karva hoy to banaviu che jene aapde app.use() middelvar ma mokalsu. |                                                                                                                                                                        
|     secret: 'mysupersecretstring',                                                                                                                              |                                          
|     resave: false,                                                                                                                                              |                          
|     saveUninitialized: true,                                                                                                                                    |                                    
|     cookie: {                                                                                                                                                   |                                                                    
|       expires: Date.now() + 1000 * 60 * 60 * 24 * 3, //in miliy secound for 3 days                                                                              |                                                              
|       maxAge: 1000 * 60 * 24 * 3,                                                                                                                               |                                          
|       httpOnly: true, //for the security perpous                                                                                                                |                              
|     },                                                                                                                                                          |                
| };                                                                                                                                                              |                                                                                                                                        |                                        
-------------------------------------------------------------------------------------------------------------------------------------------------------------------

24. Authentication & Authorization :=
----------------------------------

-> Authentication :- Authentication is the process of verifying who someone to -> singup & login

-> Authorization :- Authorization is the process of verifying what specific applications, files, and data a user has access to 

--> Storing Passwords := We NEVER store the passwords as it is. We store their hashed form.
---------------------

--------------------------------------------------------------------------------------------------------
|                 ------------                                                                         | 
| password        |  Hshing  |     how it is store                                                     |
| "helloworld"    | Function |     "936a185caaa266bb9cbe981e9e05cb78cd732b0b3280eb944412bb6f8f8fO7af"  |
|                 ------------                                                                         |
--------------------------------------------------------------------------------------------------------

--> Hashing := What we know?
-----------

-> For every input, there is a fixed output

-> They are one-way function, we can't get input from output

-> For a different input, there is a different output but of same length

-> Small changes in input should bring large changes in output

Ex :- SHA256
      MD5
      CRC 
      BERYPT

--> Salting :-
-----------

-> Password salting is a technique to protect passwords stored in databases by adding a stiring of 32 or more characteres and then hashing them.

--> Passport :- (npm package)
------------

-> pssport is the node js librery that can use for the Authentication. Passport is autometicaly conver the password in the form hashing with include salts. we can singup with google, facebook, github and many more in Passport.

-> npm i Passport
-> npm i passport-local
-> npm i Passport-local-mongoose

--> User Model :=
--------------

-> user: username, password: email

-> you're free to define your User how you like. Passport-Local mongoose will add a username, hash and slat filed to sotre the usernmae, the hashed passowrd and the salt value.

-> Additionally, Passport-Local Mongoose adds some methods to your Schema.see the API 

--> Configering Strategy := (Basic setting it means)
------------------------

=> passport.initialize(); -> A middleware that initializes passport.

=> passport.session(); -> A web application needs the ability to identify users as they browse from page to page. This series of request and responses, each associated with the same user, is known as a session.

=> passport.use(new LocalStrategy(User.authenticate()));

=> passport.serializeUser(User.serializeUser()); => user ni information ne jo aapde session ma store karviye to aa method no use thay che serializeUser.
=> passport.deserializeUser(User.deserializeUser()); => user ni information ne jo aapde session mathi unstore,remove karviye to aa method no use thay che deserializeUser.

25. Demo user :=
-------------

------------------------------------------------------------------------
| app.get("/demouser", async (req, res) => {                           |                                              
|     let fackuser = new User({                                        |                                
|         username: "preeti",                                          |                              
|         email: "vataliyag174@gmail.com",                             |                                            
|     });                                                              |          
|                                                                      |    
|     let registeredUser = await User.register(fackuser, "Ravi@2622"); |                                                                        
|                                                                      |    
|     let data = await User.find();                                    |                                    
|     console.log(data);                                               |                          
|                                                                      |    
|     res.send(registeredUser);                                        |                                
| });                                                                  |      
------------------------------------------------------------------------

--> Signup User :=
---------------

->    Get     /singup

      Post    /Signup

--> Login User :=
--------------

->    Get     /login
      Post    /login

26. Connecting Login Route :=
--------------------------

-> How to check if User is Logged in?

=> req.isAuthenticated(); // Passport method

---------------------------------------------------------------------------
| router.get("/new", wrapAsync(async (req, res) => {                      |                                               
|     if(!req.isAuthenticated()) {                                        |                             
|         req.flash("error", "you must be logged in to create listing!"); |                                                                   
|         return res.redirect("/login");                                  |                                   
|     }                                                                   | 
|     res.render("./listings/new.ejs");                                   |                                 
| }));                                                                    | 
---------------------------------------------------------------------------

27. LogOut User := 
---------------

// in user Route
----------------------------------------------
| router.get("/logout", (req, res) => {      |                                     
|   req.logout((err) => {                    |                       
|     if (err) {                             |               
|       return next(err);                    |                       
|     }                                      |     
|     req.flash("success", "logged you out");|                                           
|     res.redirect("/listings");             |                               
|   });                                      |     
| });                                        |   
----------------------------------------------

28. Add Styling :=
---------------

               ----> Undefined (not Logged in) -> signup, login
               |
-> req.user ---*
               |
               ----> obj (logged in) -> logout

-------------------------------------------------------------------------------------------
| //-> in index.js                                                                        |                                        
|                                                                                         |                        
| app.use((req, res, next) => {                                                           |                                                    
|     res.locals.success = req.flash("success");                                          |                                                                      
|     res.locals.error = req.flash("error");                                              |                                                                  
|     res.locals.currUser = req.user;                                                     |                                                          
|                                                                                         |                        
|     // console.log(res.locals.success);                                                 |                                                              
|     // console.log(res.locals.error);                                                   |                                                            
|                                                                                         |                        
|     next();                                                                             |                                  
| });                                                                                     |                          
|                                                                                         |                        
|                                                                                         |                        
| //-> in nav bar                                                                         |                                        
|                                                                                         |                        
|             <ul class="navbar-nav ms-auto">                                             |                                                                  
|                 <% if(!currUser) { %>                                                   |                                                            
|                 <li class="nav-item">                                                   |                                                            
|                     <a class="nav-link underline-slide"  href="/singnup">Sing up</a>    |                                                                                                            
|                 </li>                                                                   |                                            
|                 <li class="nav-item">                                                   |                                                            
|                     <a class="nav-link underline-slide" href="/login">Log in</a>        |                                                                                                        
|                 </li>                                                                   |                                            
|                 <% }; %>                                                                |                                                
|                                                                                         |                        
|                 <% if(currUser) { %>                                                    |                                                            
|                 <li class="nav-item">                                                   |                                                            
|                     <a class="nav-link underline-slide" href="/logout">Log out</a>      |                                                                                                          
|                 </li>                                                                   |                                            
|                 <% }; %>                                                                |                                                
|                                                                                         |                        
|             </ul>                                                                       |                                        
-------------------------------------------------------------------------------------------

29. Login after SignUp :=
----------------------

-> Passport's login method automatically establishes a login session.

-> We can invoke login to automatically login user.

-----------------------------------------------------
| req.login(registeredUser, (err) => {              |                                          
|   if(err) {                                       |                
|     next(err);                                    |                    
|   }                                               |        
|   req.flash("success", "Welcome to Wanderlust!"); |                                                      
|   res.redirect("/listings");                      |                                  
| });                                               |        
-----------------------------------------------------

30. post-login page :=
-------------------

------------------------------------------------------------------------------
| // -> using middielware                                                    |                                               
| module.exports.isLoggdIn = (req, res, next) => {                           |                                                                       
|     if(!req.isAuthenticated()) {                                           |                                                       
|         console.log(req.orignalUral);                                      |                                                           
|         req.session.redirectUrl = req.originalUrl;                         |                                                                         
|         req.flash("error", "you must be logged in to create listing!");    |                                                                                             
|         return res.redirect("/login");                                     |                                                             
|     }                                                                      |                           
|     next();                                                                |                                 
| };                                                                         |                         
|                                                                            |                       
| module.exports.saveRedirectUrl = (req, res, next) => {                     |                                                                             
|     if(req.session.redirectUrl) {                                          |                                                       
|         res.locals.redirectUrl = req.session.redirectUrl;                  |                                                                               
|     }                                                                      |                           
|                                                                            |
|     next();                                                                |
| };                                                                         |
------------------------------------------------------------------------------

---------------------------------------------------------------------------
| // using in user.js :=                                                  |                            
| router.get("/login", (req, res) => {                                    |                                          
|     res.render("./users/login.ejs");                                    |                                          
| });                                                                     |        
|                                                                         |      
| router.post("/login", saveRedirectUrl, passport.authenticate("local", { |                                                                            
|     failureRedirect: "/login",                                          |                                    
|     failureFlash: true                                                  |                            
| }), wrapAsync(async (req, res) => {                                     |                                        
|     req.flash("success", "Welcome to Wanderlust! You are logged in!");  |                                                                            
|     let redirectUrl = res.locals.redirectUrl || "/listings";            |                                                                  
|     res.redirect(redirectUrl);                                          |                                    
| }));                                                                    |          
---------------------------------------------------------------------------

31. Listing Owner :=
-----------------

